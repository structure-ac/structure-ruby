# Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

# typed: true
# frozen_string_literal: true

require 'sorbet-runtime'
require 'faraday'

module Structure
  module Operations
    class ListEmployeesRequest < Structure::Utils::FieldAugmented
      extend T::Sig

            # ID of the company
      field :id, String, { 'path_param': { 'field_name': 'id', 'style': 'simple', 'explode': false } }      # The offset number to start at
      field :offset, T.nilable(String), { 'query_param': { 'field_name': 'offset', 'style': 'form', 'explode': true } }      # Number of results per page (0-100)
      field :per_page, T.nilable(String), { 'query_param': { 'field_name': 'per_page', 'style': 'form', 'explode': true } }

      sig { params(id: String, offset: T.nilable(String), per_page: T.nilable(String)).void }
      def initialize(id: nil, offset: nil, per_page: nil)
        @id = id
        @offset = offset
        @per_page = per_page
      end
    end

    class ListEmployeesResponse < Structure::Utils::FieldAugmented
      extend T::Sig

      
      field :content_type, String
      field :status_code, Integer
      field :body, T.nilable(String)
      field :raw_response, T.nilable(Faraday::Response)

      sig { params(content_type: String, status_code: Integer, body: T.nilable(String), raw_response: T.nilable(Faraday::Response)).void }
      def initialize(content_type: nil, status_code: nil, body: nil, raw_response: nil)
        @content_type = content_type
        @status_code = status_code
        @body = body
        @raw_response = raw_response
      end
    end
  end
end
